State 43 conflicts: 2 shift/reduce
State 137 conflicts: 2 shift/reduce
State 138 conflicts: 2 shift/reduce


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | input line

    3 line: '\n'
    4     | function '\n'
    5     | function_fire '\n'
    6     | declare '\n'
    7     | assign '\n'
    8     | exp_unary
    9     | BLP '\n'
   10     | BRP '\n'
   11     | if_line '\n'
   12     | while_line '\n'
   13     | for_line '\n'
   14     | control '\n'
   15     | return_line '\n'
   16     | error '\n'

   17 function: VOID ID LP RP
   18         | INT ID LP RP
   19         | CHAR ID LP RP
   20         | FLOAT ID LP RP
   21         | INT ID LP function_param RP
   22         | CHAR ID LP function_param RP
   23         | FLOAT ID LP function_param RP

   24 function_param: INT ID
   25               | CHAR ID
   26               | FLOAT ID
   27               | INT ID ',' function_param
   28               | CHAR ID ',' function_param
   29               | FLOAT ID ',' function_param

   30 function_fire: ID LP RP
   31              | ID LP value_list RP

   32 value_list: exp
   33           | exp ',' value_list

   34 control: CONTINUE
   35        | BREAK
   36        | ELSE

   37 return_line: RETURN
   38            | RETURN exp

   39 while_line: WHILE LP condition_list RP

   40 for_line: FOR LP assign ';' condition_list ';' exp_unary RP
   41         | FOR LP ';' condition_list ';' exp_unary RP
   42         | FOR LP assign ';' condition_list ';' RP
   43         | FOR LP ';' condition_list ';' RP

   44 if_line: IF LP condition_list RP

   45 condition_list: condition
   46               | NOT condition
   47               | condition_list AND condition_list
   48               | condition_list OR condition_list

   49 condition: exp EQUAL exp
   50          | exp GREATER exp
   51          | exp LESS exp
   52          | exp GREATER_EQUAL exp
   53          | exp LESS_EQUAL exp

   54 declare: INT sub_declare
   55        | CHAR sub_declare
   56        | FLOAT sub_declare

   57 sub_declare: id ',' sub_declare
   58            | id
   59            | id_array ',' sub_declare
   60            | id_array

   61 exp: function_fire
   62    | exp_unary
   63    | INTEGER
   64    | id
   65    | exp PLUS exp
   66    | exp STAR exp
   67    | exp MINUS exp
   68    | exp DIV exp
   69    | LP exp RP

   70 assign: id ASSIGNOP exp

   71 exp_unary: MINUS exp
   72          | INC id
   73          | DEC id
   74          | id INC
   75          | id DEC

   76 id: ID

   77 id_array: ID MLP INTEGER MRP
   78         | ID MLP INTEGER MRP MLP INTEGER MRP
   79         | ID MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3 4 5 6 7 9 10 11 12 13 14 15 16
',' (44) 27 28 29 33 57 59
';' (59) 40 41 42 43
error (256) 16
INTEGER (258) 63 77 78 79
ID (259) 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 76 77 78 79
LP (260) 17 18 19 20 21 22 23 30 31 39 40 41 42 43 44 69
RP (261) 17 18 19 20 21 22 23 30 31 39 40 41 42 43 44 69
BLP (262) 9
BRP (263) 10
MLP (264) 77 78 79
MRP (265) 77 78 79
PLUS (266) 65
MINUS (267) 67 71
STAR (268) 66
DIV (269) 68
ASSIGNOP (270) 70
INT (271) 18 21 24 27 54
FLOAT (272) 20 23 26 29 56
CHAR (273) 19 22 25 28 55
GREATER (274) 50
LESS (275) 51
EQUAL (276) 49
GREATER_EQUAL (277) 52
LESS_EQUAL (278) 53
IF (279) 44
ELSE (280) 36
WHILE (281) 39
CONTINUE (282) 34
BREAK (283) 35
FOR (284) 40 41 42 43
RETURN (285) 37 38
INC (286) 72 74
DEC (287) 73 75
AND (288) 47
OR (289) 48
NOT (290) 46
VARIABLE (291)
FUNCTION_PRI (292)
DECLARE_PRI (293)
VOID (294) 17
UNARY (295)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
input (45)
    on left: 1 2, on right: 0 2
line (46)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2
function (47)
    on left: 17 18 19 20 21 22 23, on right: 4
function_param (48)
    on left: 24 25 26 27 28 29, on right: 21 22 23 27 28 29
function_fire (49)
    on left: 30 31, on right: 5 61
value_list (50)
    on left: 32 33, on right: 31 33
control (51)
    on left: 34 35 36, on right: 14
return_line (52)
    on left: 37 38, on right: 15
while_line (53)
    on left: 39, on right: 12
for_line (54)
    on left: 40 41 42 43, on right: 13
if_line (55)
    on left: 44, on right: 11
condition_list (56)
    on left: 45 46 47 48, on right: 39 40 41 42 43 44 47 48
condition (57)
    on left: 49 50 51 52 53, on right: 45 46
declare (58)
    on left: 54 55 56, on right: 6
sub_declare (59)
    on left: 57 58 59 60, on right: 54 55 56 57 59
exp (60)
    on left: 61 62 63 64 65 66 67 68 69, on right: 32 33 38 49 50 51
    52 53 65 66 67 68 69 70 71
assign (61)
    on left: 70, on right: 7 40 42
exp_unary (62)
    on left: 71 72 73 74 75, on right: 8 40 41 62
id (63)
    on left: 76, on right: 57 58 64 70 72 73 74 75
id_array (64)
    on left: 77 78 79, on right: 59 60


state 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


state 1

    0 $accept: input . $end
    2 input: input . line

    $end      shift, and go to state 2
    error     shift, and go to state 3
    ID        shift, and go to state 4
    BLP       shift, and go to state 5
    BRP       shift, and go to state 6
    MINUS     shift, and go to state 7
    INT       shift, and go to state 8
    FLOAT     shift, and go to state 9
    CHAR      shift, and go to state 10
    IF        shift, and go to state 11
    ELSE      shift, and go to state 12
    WHILE     shift, and go to state 13
    CONTINUE  shift, and go to state 14
    BREAK     shift, and go to state 15
    FOR       shift, and go to state 16
    RETURN    shift, and go to state 17
    INC       shift, and go to state 18
    DEC       shift, and go to state 19
    VOID      shift, and go to state 20
    '\n'      shift, and go to state 21

    line           go to state 22
    function       go to state 23
    function_fire  go to state 24
    control        go to state 25
    return_line    go to state 26
    while_line     go to state 27
    for_line       go to state 28
    if_line        go to state 29
    declare        go to state 30
    assign         go to state 31
    exp_unary      go to state 32
    id             go to state 33


state 2

    0 $accept: input $end .

    $default  accept


state 3

   16 line: error . '\n'

    '\n'  shift, and go to state 34


state 4

   30 function_fire: ID . LP RP
   31              | ID . LP value_list RP
   76 id: ID .

    LP  shift, and go to state 35

    $default  reduce using rule 76 (id)


state 5

    9 line: BLP . '\n'

    '\n'  shift, and go to state 36


state 6

   10 line: BRP . '\n'

    '\n'  shift, and go to state 37


state 7

   71 exp_unary: MINUS . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 41
    exp_unary      go to state 42
    id             go to state 43


state 8

   18 function: INT . ID LP RP
   21         | INT . ID LP function_param RP
   54 declare: INT . sub_declare

    ID  shift, and go to state 44

    sub_declare  go to state 45
    id           go to state 46
    id_array     go to state 47


state 9

   20 function: FLOAT . ID LP RP
   23         | FLOAT . ID LP function_param RP
   56 declare: FLOAT . sub_declare

    ID  shift, and go to state 48

    sub_declare  go to state 49
    id           go to state 46
    id_array     go to state 47


state 10

   19 function: CHAR . ID LP RP
   22         | CHAR . ID LP function_param RP
   55 declare: CHAR . sub_declare

    ID  shift, and go to state 50

    sub_declare  go to state 51
    id           go to state 46
    id_array     go to state 47


state 11

   44 if_line: IF . LP condition_list RP

    LP  shift, and go to state 52


state 12

   36 control: ELSE .

    $default  reduce using rule 36 (control)


state 13

   39 while_line: WHILE . LP condition_list RP

    LP  shift, and go to state 53


state 14

   34 control: CONTINUE .

    $default  reduce using rule 34 (control)


state 15

   35 control: BREAK .

    $default  reduce using rule 35 (control)


state 16

   40 for_line: FOR . LP assign ';' condition_list ';' exp_unary RP
   41         | FOR . LP ';' condition_list ';' exp_unary RP
   42         | FOR . LP assign ';' condition_list ';' RP
   43         | FOR . LP ';' condition_list ';' RP

    LP  shift, and go to state 54


state 17

   37 return_line: RETURN .
   38            | RETURN . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    $default  reduce using rule 37 (return_line)

    function_fire  go to state 40
    exp            go to state 55
    exp_unary      go to state 42
    id             go to state 43


state 18

   72 exp_unary: INC . id

    ID  shift, and go to state 56

    id  go to state 57


state 19

   73 exp_unary: DEC . id

    ID  shift, and go to state 56

    id  go to state 58


state 20

   17 function: VOID . ID LP RP

    ID  shift, and go to state 59


state 21

    3 line: '\n' .

    $default  reduce using rule 3 (line)


state 22

    2 input: input line .

    $default  reduce using rule 2 (input)


state 23

    4 line: function . '\n'

    '\n'  shift, and go to state 60


state 24

    5 line: function_fire . '\n'

    '\n'  shift, and go to state 61


state 25

   14 line: control . '\n'

    '\n'  shift, and go to state 62


state 26

   15 line: return_line . '\n'

    '\n'  shift, and go to state 63


state 27

   12 line: while_line . '\n'

    '\n'  shift, and go to state 64


state 28

   13 line: for_line . '\n'

    '\n'  shift, and go to state 65


state 29

   11 line: if_line . '\n'

    '\n'  shift, and go to state 66


state 30

    6 line: declare . '\n'

    '\n'  shift, and go to state 67


state 31

    7 line: assign . '\n'

    '\n'  shift, and go to state 68


state 32

    8 line: exp_unary .

    $default  reduce using rule 8 (line)


state 33

   70 assign: id . ASSIGNOP exp
   74 exp_unary: id . INC
   75          | id . DEC

    ASSIGNOP  shift, and go to state 69
    INC       shift, and go to state 70
    DEC       shift, and go to state 71


state 34

   16 line: error '\n' .

    $default  reduce using rule 16 (line)


state 35

   30 function_fire: ID LP . RP
   31              | ID LP . value_list RP

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    RP       shift, and go to state 72
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    value_list     go to state 73
    exp            go to state 74
    exp_unary      go to state 42
    id             go to state 43


state 36

    9 line: BLP '\n' .

    $default  reduce using rule 9 (line)


state 37

   10 line: BRP '\n' .

    $default  reduce using rule 10 (line)


state 38

   63 exp: INTEGER .

    $default  reduce using rule 63 (exp)


state 39

   69 exp: LP . exp RP

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 75
    exp_unary      go to state 42
    id             go to state 43


state 40

   61 exp: function_fire .

    $default  reduce using rule 61 (exp)


state 41

   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp
   71 exp_unary: MINUS exp .

    STAR  shift, and go to state 78
    DIV   shift, and go to state 79

    $default  reduce using rule 71 (exp_unary)


state 42

   62 exp: exp_unary .

    $default  reduce using rule 62 (exp)


state 43

   64 exp: id .
   74 exp_unary: id . INC
   75          | id . DEC

    INC  shift, and go to state 70
    DEC  shift, and go to state 71

    INC       [reduce using rule 64 (exp)]
    DEC       [reduce using rule 64 (exp)]
    $default  reduce using rule 64 (exp)


state 44

   18 function: INT ID . LP RP
   21         | INT ID . LP function_param RP
   76 id: ID .
   77 id_array: ID . MLP INTEGER MRP
   78         | ID . MLP INTEGER MRP MLP INTEGER MRP
   79         | ID . MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP

    LP   shift, and go to state 80
    MLP  shift, and go to state 81

    $default  reduce using rule 76 (id)


state 45

   54 declare: INT sub_declare .

    $default  reduce using rule 54 (declare)


state 46

   57 sub_declare: id . ',' sub_declare
   58            | id .

    ','  shift, and go to state 82

    $default  reduce using rule 58 (sub_declare)


state 47

   59 sub_declare: id_array . ',' sub_declare
   60            | id_array .

    ','  shift, and go to state 83

    $default  reduce using rule 60 (sub_declare)


state 48

   20 function: FLOAT ID . LP RP
   23         | FLOAT ID . LP function_param RP
   76 id: ID .
   77 id_array: ID . MLP INTEGER MRP
   78         | ID . MLP INTEGER MRP MLP INTEGER MRP
   79         | ID . MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP

    LP   shift, and go to state 84
    MLP  shift, and go to state 81

    $default  reduce using rule 76 (id)


state 49

   56 declare: FLOAT sub_declare .

    $default  reduce using rule 56 (declare)


state 50

   19 function: CHAR ID . LP RP
   22         | CHAR ID . LP function_param RP
   76 id: ID .
   77 id_array: ID . MLP INTEGER MRP
   78         | ID . MLP INTEGER MRP MLP INTEGER MRP
   79         | ID . MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP

    LP   shift, and go to state 85
    MLP  shift, and go to state 81

    $default  reduce using rule 76 (id)


state 51

   55 declare: CHAR sub_declare .

    $default  reduce using rule 55 (declare)


state 52

   44 if_line: IF LP . condition_list RP

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 86

    function_fire   go to state 40
    condition_list  go to state 87
    condition       go to state 88
    exp             go to state 89
    exp_unary       go to state 42
    id              go to state 43


state 53

   39 while_line: WHILE LP . condition_list RP

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 86

    function_fire   go to state 40
    condition_list  go to state 90
    condition       go to state 88
    exp             go to state 89
    exp_unary       go to state 42
    id              go to state 43


state 54

   40 for_line: FOR LP . assign ';' condition_list ';' exp_unary RP
   41         | FOR LP . ';' condition_list ';' exp_unary RP
   42         | FOR LP . assign ';' condition_list ';' RP
   43         | FOR LP . ';' condition_list ';' RP

    ID   shift, and go to state 56
    ';'  shift, and go to state 91

    assign  go to state 92
    id      go to state 93


state 55

   38 return_line: RETURN exp .
   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    STAR   shift, and go to state 78
    DIV    shift, and go to state 79

    $default  reduce using rule 38 (return_line)


state 56

   76 id: ID .

    $default  reduce using rule 76 (id)


state 57

   72 exp_unary: INC id .

    $default  reduce using rule 72 (exp_unary)


state 58

   73 exp_unary: DEC id .

    $default  reduce using rule 73 (exp_unary)


state 59

   17 function: VOID ID . LP RP

    LP  shift, and go to state 94


state 60

    4 line: function '\n' .

    $default  reduce using rule 4 (line)


state 61

    5 line: function_fire '\n' .

    $default  reduce using rule 5 (line)


state 62

   14 line: control '\n' .

    $default  reduce using rule 14 (line)


state 63

   15 line: return_line '\n' .

    $default  reduce using rule 15 (line)


state 64

   12 line: while_line '\n' .

    $default  reduce using rule 12 (line)


state 65

   13 line: for_line '\n' .

    $default  reduce using rule 13 (line)


state 66

   11 line: if_line '\n' .

    $default  reduce using rule 11 (line)


state 67

    6 line: declare '\n' .

    $default  reduce using rule 6 (line)


state 68

    7 line: assign '\n' .

    $default  reduce using rule 7 (line)


state 69

   70 assign: id ASSIGNOP . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 95
    exp_unary      go to state 42
    id             go to state 43


state 70

   74 exp_unary: id INC .

    $default  reduce using rule 74 (exp_unary)


state 71

   75 exp_unary: id DEC .

    $default  reduce using rule 75 (exp_unary)


state 72

   30 function_fire: ID LP RP .

    $default  reduce using rule 30 (function_fire)


state 73

   31 function_fire: ID LP value_list . RP

    RP  shift, and go to state 96


state 74

   32 value_list: exp .
   33           | exp . ',' value_list
   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    STAR   shift, and go to state 78
    DIV    shift, and go to state 79
    ','    shift, and go to state 97

    $default  reduce using rule 32 (value_list)


state 75

   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp
   69    | LP exp . RP

    RP     shift, and go to state 98
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    STAR   shift, and go to state 78
    DIV    shift, and go to state 79


state 76

   65 exp: exp PLUS . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 99
    exp_unary      go to state 42
    id             go to state 43


state 77

   67 exp: exp MINUS . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 100
    exp_unary      go to state 42
    id             go to state 43


state 78

   66 exp: exp STAR . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 101
    exp_unary      go to state 42
    id             go to state 43


state 79

   68 exp: exp DIV . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 102
    exp_unary      go to state 42
    id             go to state 43


state 80

   18 function: INT ID LP . RP
   21         | INT ID LP . function_param RP

    RP     shift, and go to state 103
    INT    shift, and go to state 104
    FLOAT  shift, and go to state 105
    CHAR   shift, and go to state 106

    function_param  go to state 107


state 81

   77 id_array: ID MLP . INTEGER MRP
   78         | ID MLP . INTEGER MRP MLP INTEGER MRP
   79         | ID MLP . INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP

    INTEGER  shift, and go to state 108


state 82

   57 sub_declare: id ',' . sub_declare

    ID  shift, and go to state 109

    sub_declare  go to state 110
    id           go to state 46
    id_array     go to state 47


state 83

   59 sub_declare: id_array ',' . sub_declare

    ID  shift, and go to state 109

    sub_declare  go to state 111
    id           go to state 46
    id_array     go to state 47


state 84

   20 function: FLOAT ID LP . RP
   23         | FLOAT ID LP . function_param RP

    RP     shift, and go to state 112
    INT    shift, and go to state 104
    FLOAT  shift, and go to state 105
    CHAR   shift, and go to state 106

    function_param  go to state 113


state 85

   19 function: CHAR ID LP . RP
   22         | CHAR ID LP . function_param RP

    RP     shift, and go to state 114
    INT    shift, and go to state 104
    FLOAT  shift, and go to state 105
    CHAR   shift, and go to state 106

    function_param  go to state 115


state 86

   46 condition_list: NOT . condition

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    condition      go to state 116
    exp            go to state 89
    exp_unary      go to state 42
    id             go to state 43


state 87

   44 if_line: IF LP condition_list . RP
   47 condition_list: condition_list . AND condition_list
   48               | condition_list . OR condition_list

    RP   shift, and go to state 117
    AND  shift, and go to state 118
    OR   shift, and go to state 119


state 88

   45 condition_list: condition .

    $default  reduce using rule 45 (condition_list)


state 89

   49 condition: exp . EQUAL exp
   50          | exp . GREATER exp
   51          | exp . LESS exp
   52          | exp . GREATER_EQUAL exp
   53          | exp . LESS_EQUAL exp
   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp

    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    STAR           shift, and go to state 78
    DIV            shift, and go to state 79
    GREATER        shift, and go to state 120
    LESS           shift, and go to state 121
    EQUAL          shift, and go to state 122
    GREATER_EQUAL  shift, and go to state 123
    LESS_EQUAL     shift, and go to state 124


state 90

   39 while_line: WHILE LP condition_list . RP
   47 condition_list: condition_list . AND condition_list
   48               | condition_list . OR condition_list

    RP   shift, and go to state 125
    AND  shift, and go to state 118
    OR   shift, and go to state 119


state 91

   41 for_line: FOR LP ';' . condition_list ';' exp_unary RP
   43         | FOR LP ';' . condition_list ';' RP

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 86

    function_fire   go to state 40
    condition_list  go to state 126
    condition       go to state 88
    exp             go to state 89
    exp_unary       go to state 42
    id              go to state 43


state 92

   40 for_line: FOR LP assign . ';' condition_list ';' exp_unary RP
   42         | FOR LP assign . ';' condition_list ';' RP

    ';'  shift, and go to state 127


state 93

   70 assign: id . ASSIGNOP exp

    ASSIGNOP  shift, and go to state 69


state 94

   17 function: VOID ID LP . RP

    RP  shift, and go to state 128


state 95

   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp
   70 assign: id ASSIGNOP exp .

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    STAR   shift, and go to state 78
    DIV    shift, and go to state 79

    $default  reduce using rule 70 (assign)


state 96

   31 function_fire: ID LP value_list RP .

    $default  reduce using rule 31 (function_fire)


state 97

   33 value_list: exp ',' . value_list

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    value_list     go to state 129
    exp            go to state 74
    exp_unary      go to state 42
    id             go to state 43


state 98

   69 exp: LP exp RP .

    $default  reduce using rule 69 (exp)


state 99

   65 exp: exp . PLUS exp
   65    | exp PLUS exp .
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp

    STAR  shift, and go to state 78
    DIV   shift, and go to state 79

    $default  reduce using rule 65 (exp)


state 100

   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   67    | exp MINUS exp .
   68    | exp . DIV exp

    STAR  shift, and go to state 78
    DIV   shift, and go to state 79

    $default  reduce using rule 67 (exp)


state 101

   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   66    | exp STAR exp .
   67    | exp . MINUS exp
   68    | exp . DIV exp

    $default  reduce using rule 66 (exp)


state 102

   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp
   68    | exp DIV exp .

    $default  reduce using rule 68 (exp)


state 103

   18 function: INT ID LP RP .

    $default  reduce using rule 18 (function)


state 104

   24 function_param: INT . ID
   27               | INT . ID ',' function_param

    ID  shift, and go to state 130


state 105

   26 function_param: FLOAT . ID
   29               | FLOAT . ID ',' function_param

    ID  shift, and go to state 131


state 106

   25 function_param: CHAR . ID
   28               | CHAR . ID ',' function_param

    ID  shift, and go to state 132


state 107

   21 function: INT ID LP function_param . RP

    RP  shift, and go to state 133


state 108

   77 id_array: ID MLP INTEGER . MRP
   78         | ID MLP INTEGER . MRP MLP INTEGER MRP
   79         | ID MLP INTEGER . MRP MLP INTEGER MRP MLP INTEGER MRP

    MRP  shift, and go to state 134


state 109

   76 id: ID .
   77 id_array: ID . MLP INTEGER MRP
   78         | ID . MLP INTEGER MRP MLP INTEGER MRP
   79         | ID . MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP

    MLP  shift, and go to state 81

    $default  reduce using rule 76 (id)


state 110

   57 sub_declare: id ',' sub_declare .

    $default  reduce using rule 57 (sub_declare)


state 111

   59 sub_declare: id_array ',' sub_declare .

    $default  reduce using rule 59 (sub_declare)


state 112

   20 function: FLOAT ID LP RP .

    $default  reduce using rule 20 (function)


state 113

   23 function: FLOAT ID LP function_param . RP

    RP  shift, and go to state 135


state 114

   19 function: CHAR ID LP RP .

    $default  reduce using rule 19 (function)


state 115

   22 function: CHAR ID LP function_param . RP

    RP  shift, and go to state 136


state 116

   46 condition_list: NOT condition .

    $default  reduce using rule 46 (condition_list)


state 117

   44 if_line: IF LP condition_list RP .

    $default  reduce using rule 44 (if_line)


state 118

   47 condition_list: condition_list AND . condition_list

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 86

    function_fire   go to state 40
    condition_list  go to state 137
    condition       go to state 88
    exp             go to state 89
    exp_unary       go to state 42
    id              go to state 43


state 119

   48 condition_list: condition_list OR . condition_list

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 86

    function_fire   go to state 40
    condition_list  go to state 138
    condition       go to state 88
    exp             go to state 89
    exp_unary       go to state 42
    id              go to state 43


state 120

   50 condition: exp GREATER . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 139
    exp_unary      go to state 42
    id             go to state 43


state 121

   51 condition: exp LESS . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 140
    exp_unary      go to state 42
    id             go to state 43


state 122

   49 condition: exp EQUAL . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 141
    exp_unary      go to state 42
    id             go to state 43


state 123

   52 condition: exp GREATER_EQUAL . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 142
    exp_unary      go to state 42
    id             go to state 43


state 124

   53 condition: exp LESS_EQUAL . exp

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 40
    exp            go to state 143
    exp_unary      go to state 42
    id             go to state 43


state 125

   39 while_line: WHILE LP condition_list RP .

    $default  reduce using rule 39 (while_line)


state 126

   41 for_line: FOR LP ';' condition_list . ';' exp_unary RP
   43         | FOR LP ';' condition_list . ';' RP
   47 condition_list: condition_list . AND condition_list
   48               | condition_list . OR condition_list

    AND  shift, and go to state 118
    OR   shift, and go to state 119
    ';'  shift, and go to state 144


state 127

   40 for_line: FOR LP assign ';' . condition_list ';' exp_unary RP
   42         | FOR LP assign ';' . condition_list ';' RP

    INTEGER  shift, and go to state 38
    ID       shift, and go to state 4
    LP       shift, and go to state 39
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 86

    function_fire   go to state 40
    condition_list  go to state 145
    condition       go to state 88
    exp             go to state 89
    exp_unary       go to state 42
    id              go to state 43


state 128

   17 function: VOID ID LP RP .

    $default  reduce using rule 17 (function)


state 129

   33 value_list: exp ',' value_list .

    $default  reduce using rule 33 (value_list)


state 130

   24 function_param: INT ID .
   27               | INT ID . ',' function_param

    ','  shift, and go to state 146

    $default  reduce using rule 24 (function_param)


state 131

   26 function_param: FLOAT ID .
   29               | FLOAT ID . ',' function_param

    ','  shift, and go to state 147

    $default  reduce using rule 26 (function_param)


state 132

   25 function_param: CHAR ID .
   28               | CHAR ID . ',' function_param

    ','  shift, and go to state 148

    $default  reduce using rule 25 (function_param)


state 133

   21 function: INT ID LP function_param RP .

    $default  reduce using rule 21 (function)


state 134

   77 id_array: ID MLP INTEGER MRP .
   78         | ID MLP INTEGER MRP . MLP INTEGER MRP
   79         | ID MLP INTEGER MRP . MLP INTEGER MRP MLP INTEGER MRP

    MLP  shift, and go to state 149

    $default  reduce using rule 77 (id_array)


state 135

   23 function: FLOAT ID LP function_param RP .

    $default  reduce using rule 23 (function)


state 136

   22 function: CHAR ID LP function_param RP .

    $default  reduce using rule 22 (function)


state 137

   47 condition_list: condition_list . AND condition_list
   47               | condition_list AND condition_list .
   48               | condition_list . OR condition_list

    AND  shift, and go to state 118
    OR   shift, and go to state 119

    AND       [reduce using rule 47 (condition_list)]
    OR        [reduce using rule 47 (condition_list)]
    $default  reduce using rule 47 (condition_list)


state 138

   47 condition_list: condition_list . AND condition_list
   48               | condition_list . OR condition_list
   48               | condition_list OR condition_list .

    AND  shift, and go to state 118
    OR   shift, and go to state 119

    AND       [reduce using rule 48 (condition_list)]
    OR        [reduce using rule 48 (condition_list)]
    $default  reduce using rule 48 (condition_list)


state 139

   50 condition: exp GREATER exp .
   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    STAR   shift, and go to state 78
    DIV    shift, and go to state 79

    $default  reduce using rule 50 (condition)


state 140

   51 condition: exp LESS exp .
   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    STAR   shift, and go to state 78
    DIV    shift, and go to state 79

    $default  reduce using rule 51 (condition)


state 141

   49 condition: exp EQUAL exp .
   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    STAR   shift, and go to state 78
    DIV    shift, and go to state 79

    $default  reduce using rule 49 (condition)


state 142

   52 condition: exp GREATER_EQUAL exp .
   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    STAR   shift, and go to state 78
    DIV    shift, and go to state 79

    $default  reduce using rule 52 (condition)


state 143

   53 condition: exp LESS_EQUAL exp .
   65 exp: exp . PLUS exp
   66    | exp . STAR exp
   67    | exp . MINUS exp
   68    | exp . DIV exp

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77
    STAR   shift, and go to state 78
    DIV    shift, and go to state 79

    $default  reduce using rule 53 (condition)


state 144

   41 for_line: FOR LP ';' condition_list ';' . exp_unary RP
   43         | FOR LP ';' condition_list ';' . RP

    ID     shift, and go to state 56
    RP     shift, and go to state 150
    MINUS  shift, and go to state 7
    INC    shift, and go to state 18
    DEC    shift, and go to state 19

    exp_unary  go to state 151
    id         go to state 152


state 145

   40 for_line: FOR LP assign ';' condition_list . ';' exp_unary RP
   42         | FOR LP assign ';' condition_list . ';' RP
   47 condition_list: condition_list . AND condition_list
   48               | condition_list . OR condition_list

    AND  shift, and go to state 118
    OR   shift, and go to state 119
    ';'  shift, and go to state 153


state 146

   27 function_param: INT ID ',' . function_param

    INT    shift, and go to state 104
    FLOAT  shift, and go to state 105
    CHAR   shift, and go to state 106

    function_param  go to state 154


state 147

   29 function_param: FLOAT ID ',' . function_param

    INT    shift, and go to state 104
    FLOAT  shift, and go to state 105
    CHAR   shift, and go to state 106

    function_param  go to state 155


state 148

   28 function_param: CHAR ID ',' . function_param

    INT    shift, and go to state 104
    FLOAT  shift, and go to state 105
    CHAR   shift, and go to state 106

    function_param  go to state 156


state 149

   78 id_array: ID MLP INTEGER MRP MLP . INTEGER MRP
   79         | ID MLP INTEGER MRP MLP . INTEGER MRP MLP INTEGER MRP

    INTEGER  shift, and go to state 157


state 150

   43 for_line: FOR LP ';' condition_list ';' RP .

    $default  reduce using rule 43 (for_line)


state 151

   41 for_line: FOR LP ';' condition_list ';' exp_unary . RP

    RP  shift, and go to state 158


state 152

   74 exp_unary: id . INC
   75          | id . DEC

    INC  shift, and go to state 70
    DEC  shift, and go to state 71


state 153

   40 for_line: FOR LP assign ';' condition_list ';' . exp_unary RP
   42         | FOR LP assign ';' condition_list ';' . RP

    ID     shift, and go to state 56
    RP     shift, and go to state 159
    MINUS  shift, and go to state 7
    INC    shift, and go to state 18
    DEC    shift, and go to state 19

    exp_unary  go to state 160
    id         go to state 152


state 154

   27 function_param: INT ID ',' function_param .

    $default  reduce using rule 27 (function_param)


state 155

   29 function_param: FLOAT ID ',' function_param .

    $default  reduce using rule 29 (function_param)


state 156

   28 function_param: CHAR ID ',' function_param .

    $default  reduce using rule 28 (function_param)


state 157

   78 id_array: ID MLP INTEGER MRP MLP INTEGER . MRP
   79         | ID MLP INTEGER MRP MLP INTEGER . MRP MLP INTEGER MRP

    MRP  shift, and go to state 161


state 158

   41 for_line: FOR LP ';' condition_list ';' exp_unary RP .

    $default  reduce using rule 41 (for_line)


state 159

   42 for_line: FOR LP assign ';' condition_list ';' RP .

    $default  reduce using rule 42 (for_line)


state 160

   40 for_line: FOR LP assign ';' condition_list ';' exp_unary . RP

    RP  shift, and go to state 162


state 161

   78 id_array: ID MLP INTEGER MRP MLP INTEGER MRP .
   79         | ID MLP INTEGER MRP MLP INTEGER MRP . MLP INTEGER MRP

    MLP  shift, and go to state 163

    $default  reduce using rule 78 (id_array)


state 162

   40 for_line: FOR LP assign ';' condition_list ';' exp_unary RP .

    $default  reduce using rule 40 (for_line)


state 163

   79 id_array: ID MLP INTEGER MRP MLP INTEGER MRP MLP . INTEGER MRP

    INTEGER  shift, and go to state 164


state 164

   79 id_array: ID MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER . MRP

    MRP  shift, and go to state 165


state 165

   79 id_array: ID MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP .

    $default  reduce using rule 79 (id_array)
