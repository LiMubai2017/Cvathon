State 45 conflicts: 2 shift/reduce
State 147 conflicts: 2 shift/reduce
State 148 conflicts: 2 shift/reduce


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | input line

    3 line: '\n'
    4     | function '\n'
    5     | function_fire '\n'
    6     | declare '\n'
    7     | assign '\n'
    8     | exp_unary
    9     | BLP '\n'
   10     | BRP '\n'
   11     | if_line '\n'
   12     | while_line '\n'
   13     | for_line '\n'
   14     | control '\n'
   15     | return_line '\n'
   16     | error '\n'

   17 function: VOID ID LP RP
   18         | INT ID LP RP
   19         | CHAR ID LP RP
   20         | FLOAT ID LP RP
   21         | VOID ID LP function_param RP
   22         | INT ID LP function_param RP
   23         | CHAR ID LP function_param RP
   24         | FLOAT ID LP function_param RP

   25 function_param: INT ID
   26               | CHAR ID
   27               | FLOAT ID
   28               | INT ID ',' function_param
   29               | CHAR ID ',' function_param
   30               | FLOAT ID ',' function_param

   31 function_fire: ID LP RP
   32              | ID LP value_list RP

   33 value_list: exp
   34           | exp ',' value_list

   35 control: CONTINUE
   36        | BREAK
   37        | ELSE

   38 return_line: RETURN
   39            | RETURN exp

   40 while_line: WHILE LP condition_list RP

   41 for_line: FOR LP assign ';' condition_list ';' exp_unary RP
   42         | FOR LP ';' condition_list ';' exp_unary RP
   43         | FOR LP assign ';' condition_list ';' RP
   44         | FOR LP ';' condition_list ';' RP

   45 if_line: IF LP condition_list RP

   46 condition_list: condition
   47               | NOT condition
   48               | condition_list AND condition_list
   49               | condition_list OR condition_list

   50 condition: exp EQUAL exp
   51          | exp GREATER exp
   52          | exp LESS exp
   53          | exp GREATER_EQUAL exp
   54          | exp LESS_EQUAL exp

   55 declare: INT sub_declare
   56        | CHAR sub_declare
   57        | FLOAT sub_declare

   58 sub_declare: id ',' sub_declare
   59            | id
   60            | id_array ',' sub_declare
   61            | id_array

   62 exp: function_fire
   63    | exp_unary
   64    | INTEGER
   65    | id
   66    | array
   67    | exp PLUS exp
   68    | exp STAR exp
   69    | exp MINUS exp
   70    | exp DIV exp
   71    | LP exp RP

   72 assign: id ASSIGNOP exp
   73       | array ASSIGNOP exp

   74 exp_unary: MINUS exp
   75          | INC id
   76          | DEC id
   77          | id INC
   78          | id DEC

   79 id: ID

   80 id_array: ID MLP INTEGER MRP
   81         | ID MLP INTEGER MRP MLP INTEGER MRP
   82         | ID MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP

   83 array: ID MLP exp MRP
   84      | ID MLP exp MRP MLP exp MRP
   85      | ID MLP exp MRP MLP exp MRP MLP exp MRP


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3 4 5 6 7 9 10 11 12 13 14 15 16
',' (44) 28 29 30 34 58 60
';' (59) 41 42 43 44
error (256) 16
INTEGER (258) 64 80 81 82
ID (259) 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 79 80 81 82
    83 84 85
LP (260) 17 18 19 20 21 22 23 24 31 32 40 41 42 43 44 45 71
RP (261) 17 18 19 20 21 22 23 24 31 32 40 41 42 43 44 45 71
BLP (262) 9
BRP (263) 10
MLP (264) 80 81 82 83 84 85
MRP (265) 80 81 82 83 84 85
PLUS (266) 67
MINUS (267) 69 74
STAR (268) 68
DIV (269) 70
ASSIGNOP (270) 72 73
INT (271) 18 22 25 28 55
FLOAT (272) 20 24 27 30 57
CHAR (273) 19 23 26 29 56
GREATER (274) 51
LESS (275) 52
EQUAL (276) 50
GREATER_EQUAL (277) 53
LESS_EQUAL (278) 54
IF (279) 45
ELSE (280) 37
WHILE (281) 40
CONTINUE (282) 35
BREAK (283) 36
FOR (284) 41 42 43 44
RETURN (285) 38 39
INC (286) 75 77
DEC (287) 76 78
AND (288) 48
OR (289) 49
NOT (290) 47
VARIABLE (291)
FUNCTION_PRI (292)
DECLARE_PRI (293)
VOID (294) 17 21
UNARY (295)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
input (45)
    on left: 1 2, on right: 0 2
line (46)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2
function (47)
    on left: 17 18 19 20 21 22 23 24, on right: 4
function_param (48)
    on left: 25 26 27 28 29 30, on right: 21 22 23 24 28 29 30
function_fire (49)
    on left: 31 32, on right: 5 62
value_list (50)
    on left: 33 34, on right: 32 34
control (51)
    on left: 35 36 37, on right: 14
return_line (52)
    on left: 38 39, on right: 15
while_line (53)
    on left: 40, on right: 12
for_line (54)
    on left: 41 42 43 44, on right: 13
if_line (55)
    on left: 45, on right: 11
condition_list (56)
    on left: 46 47 48 49, on right: 40 41 42 43 44 45 48 49
condition (57)
    on left: 50 51 52 53 54, on right: 46 47
declare (58)
    on left: 55 56 57, on right: 6
sub_declare (59)
    on left: 58 59 60 61, on right: 55 56 57 58 60
exp (60)
    on left: 62 63 64 65 66 67 68 69 70 71, on right: 33 34 39 50 51
    52 53 54 67 68 69 70 71 72 73 74 83 84 85
assign (61)
    on left: 72 73, on right: 7 41 43
exp_unary (62)
    on left: 74 75 76 77 78, on right: 8 41 42 63
id (63)
    on left: 79, on right: 58 59 65 72 75 76 77 78
id_array (64)
    on left: 80 81 82, on right: 60 61
array (65)
    on left: 83 84 85, on right: 66 73


state 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


state 1

    0 $accept: input . $end
    2 input: input . line

    $end      shift, and go to state 2
    error     shift, and go to state 3
    ID        shift, and go to state 4
    BLP       shift, and go to state 5
    BRP       shift, and go to state 6
    MINUS     shift, and go to state 7
    INT       shift, and go to state 8
    FLOAT     shift, and go to state 9
    CHAR      shift, and go to state 10
    IF        shift, and go to state 11
    ELSE      shift, and go to state 12
    WHILE     shift, and go to state 13
    CONTINUE  shift, and go to state 14
    BREAK     shift, and go to state 15
    FOR       shift, and go to state 16
    RETURN    shift, and go to state 17
    INC       shift, and go to state 18
    DEC       shift, and go to state 19
    VOID      shift, and go to state 20
    '\n'      shift, and go to state 21

    line           go to state 22
    function       go to state 23
    function_fire  go to state 24
    control        go to state 25
    return_line    go to state 26
    while_line     go to state 27
    for_line       go to state 28
    if_line        go to state 29
    declare        go to state 30
    assign         go to state 31
    exp_unary      go to state 32
    id             go to state 33
    array          go to state 34


state 2

    0 $accept: input $end .

    $default  accept


state 3

   16 line: error . '\n'

    '\n'  shift, and go to state 35


state 4

   31 function_fire: ID . LP RP
   32              | ID . LP value_list RP
   79 id: ID .
   83 array: ID . MLP exp MRP
   84      | ID . MLP exp MRP MLP exp MRP
   85      | ID . MLP exp MRP MLP exp MRP MLP exp MRP

    LP   shift, and go to state 36
    MLP  shift, and go to state 37

    $default  reduce using rule 79 (id)


state 5

    9 line: BLP . '\n'

    '\n'  shift, and go to state 38


state 6

   10 line: BRP . '\n'

    '\n'  shift, and go to state 39


state 7

   74 exp_unary: MINUS . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 43
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 8

   18 function: INT . ID LP RP
   22         | INT . ID LP function_param RP
   55 declare: INT . sub_declare

    ID  shift, and go to state 47

    sub_declare  go to state 48
    id           go to state 49
    id_array     go to state 50


state 9

   20 function: FLOAT . ID LP RP
   24         | FLOAT . ID LP function_param RP
   57 declare: FLOAT . sub_declare

    ID  shift, and go to state 51

    sub_declare  go to state 52
    id           go to state 49
    id_array     go to state 50


state 10

   19 function: CHAR . ID LP RP
   23         | CHAR . ID LP function_param RP
   56 declare: CHAR . sub_declare

    ID  shift, and go to state 53

    sub_declare  go to state 54
    id           go to state 49
    id_array     go to state 50


state 11

   45 if_line: IF . LP condition_list RP

    LP  shift, and go to state 55


state 12

   37 control: ELSE .

    $default  reduce using rule 37 (control)


state 13

   40 while_line: WHILE . LP condition_list RP

    LP  shift, and go to state 56


state 14

   35 control: CONTINUE .

    $default  reduce using rule 35 (control)


state 15

   36 control: BREAK .

    $default  reduce using rule 36 (control)


state 16

   41 for_line: FOR . LP assign ';' condition_list ';' exp_unary RP
   42         | FOR . LP ';' condition_list ';' exp_unary RP
   43         | FOR . LP assign ';' condition_list ';' RP
   44         | FOR . LP ';' condition_list ';' RP

    LP  shift, and go to state 57


state 17

   38 return_line: RETURN .
   39            | RETURN . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    $default  reduce using rule 38 (return_line)

    function_fire  go to state 42
    exp            go to state 58
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 18

   75 exp_unary: INC . id

    ID  shift, and go to state 59

    id  go to state 60


state 19

   76 exp_unary: DEC . id

    ID  shift, and go to state 59

    id  go to state 61


state 20

   17 function: VOID . ID LP RP
   21         | VOID . ID LP function_param RP

    ID  shift, and go to state 62


state 21

    3 line: '\n' .

    $default  reduce using rule 3 (line)


state 22

    2 input: input line .

    $default  reduce using rule 2 (input)


state 23

    4 line: function . '\n'

    '\n'  shift, and go to state 63


state 24

    5 line: function_fire . '\n'

    '\n'  shift, and go to state 64


state 25

   14 line: control . '\n'

    '\n'  shift, and go to state 65


state 26

   15 line: return_line . '\n'

    '\n'  shift, and go to state 66


state 27

   12 line: while_line . '\n'

    '\n'  shift, and go to state 67


state 28

   13 line: for_line . '\n'

    '\n'  shift, and go to state 68


state 29

   11 line: if_line . '\n'

    '\n'  shift, and go to state 69


state 30

    6 line: declare . '\n'

    '\n'  shift, and go to state 70


state 31

    7 line: assign . '\n'

    '\n'  shift, and go to state 71


state 32

    8 line: exp_unary .

    $default  reduce using rule 8 (line)


state 33

   72 assign: id . ASSIGNOP exp
   77 exp_unary: id . INC
   78          | id . DEC

    ASSIGNOP  shift, and go to state 72
    INC       shift, and go to state 73
    DEC       shift, and go to state 74


state 34

   73 assign: array . ASSIGNOP exp

    ASSIGNOP  shift, and go to state 75


state 35

   16 line: error '\n' .

    $default  reduce using rule 16 (line)


state 36

   31 function_fire: ID LP . RP
   32              | ID LP . value_list RP

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    RP       shift, and go to state 76
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    value_list     go to state 77
    exp            go to state 78
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 37

   83 array: ID MLP . exp MRP
   84      | ID MLP . exp MRP MLP exp MRP
   85      | ID MLP . exp MRP MLP exp MRP MLP exp MRP

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 79
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 38

    9 line: BLP '\n' .

    $default  reduce using rule 9 (line)


state 39

   10 line: BRP '\n' .

    $default  reduce using rule 10 (line)


state 40

   64 exp: INTEGER .

    $default  reduce using rule 64 (exp)


state 41

   71 exp: LP . exp RP

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 80
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 42

   62 exp: function_fire .

    $default  reduce using rule 62 (exp)


state 43

   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp
   74 exp_unary: MINUS exp .

    STAR  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 74 (exp_unary)


state 44

   63 exp: exp_unary .

    $default  reduce using rule 63 (exp)


state 45

   65 exp: id .
   77 exp_unary: id . INC
   78          | id . DEC

    INC  shift, and go to state 73
    DEC  shift, and go to state 74

    INC       [reduce using rule 65 (exp)]
    DEC       [reduce using rule 65 (exp)]
    $default  reduce using rule 65 (exp)


state 46

   66 exp: array .

    $default  reduce using rule 66 (exp)


state 47

   18 function: INT ID . LP RP
   22         | INT ID . LP function_param RP
   79 id: ID .
   80 id_array: ID . MLP INTEGER MRP
   81         | ID . MLP INTEGER MRP MLP INTEGER MRP
   82         | ID . MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP

    LP   shift, and go to state 85
    MLP  shift, and go to state 86

    $default  reduce using rule 79 (id)


state 48

   55 declare: INT sub_declare .

    $default  reduce using rule 55 (declare)


state 49

   58 sub_declare: id . ',' sub_declare
   59            | id .

    ','  shift, and go to state 87

    $default  reduce using rule 59 (sub_declare)


state 50

   60 sub_declare: id_array . ',' sub_declare
   61            | id_array .

    ','  shift, and go to state 88

    $default  reduce using rule 61 (sub_declare)


state 51

   20 function: FLOAT ID . LP RP
   24         | FLOAT ID . LP function_param RP
   79 id: ID .
   80 id_array: ID . MLP INTEGER MRP
   81         | ID . MLP INTEGER MRP MLP INTEGER MRP
   82         | ID . MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP

    LP   shift, and go to state 89
    MLP  shift, and go to state 86

    $default  reduce using rule 79 (id)


state 52

   57 declare: FLOAT sub_declare .

    $default  reduce using rule 57 (declare)


state 53

   19 function: CHAR ID . LP RP
   23         | CHAR ID . LP function_param RP
   79 id: ID .
   80 id_array: ID . MLP INTEGER MRP
   81         | ID . MLP INTEGER MRP MLP INTEGER MRP
   82         | ID . MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP

    LP   shift, and go to state 90
    MLP  shift, and go to state 86

    $default  reduce using rule 79 (id)


state 54

   56 declare: CHAR sub_declare .

    $default  reduce using rule 56 (declare)


state 55

   45 if_line: IF LP . condition_list RP

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 91

    function_fire   go to state 42
    condition_list  go to state 92
    condition       go to state 93
    exp             go to state 94
    exp_unary       go to state 44
    id              go to state 45
    array           go to state 46


state 56

   40 while_line: WHILE LP . condition_list RP

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 91

    function_fire   go to state 42
    condition_list  go to state 95
    condition       go to state 93
    exp             go to state 94
    exp_unary       go to state 44
    id              go to state 45
    array           go to state 46


state 57

   41 for_line: FOR LP . assign ';' condition_list ';' exp_unary RP
   42         | FOR LP . ';' condition_list ';' exp_unary RP
   43         | FOR LP . assign ';' condition_list ';' RP
   44         | FOR LP . ';' condition_list ';' RP

    ID   shift, and go to state 96
    ';'  shift, and go to state 97

    assign  go to state 98
    id      go to state 99
    array   go to state 34


state 58

   39 return_line: RETURN exp .
   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84

    $default  reduce using rule 39 (return_line)


state 59

   79 id: ID .

    $default  reduce using rule 79 (id)


state 60

   75 exp_unary: INC id .

    $default  reduce using rule 75 (exp_unary)


state 61

   76 exp_unary: DEC id .

    $default  reduce using rule 76 (exp_unary)


state 62

   17 function: VOID ID . LP RP
   21         | VOID ID . LP function_param RP

    LP  shift, and go to state 100


state 63

    4 line: function '\n' .

    $default  reduce using rule 4 (line)


state 64

    5 line: function_fire '\n' .

    $default  reduce using rule 5 (line)


state 65

   14 line: control '\n' .

    $default  reduce using rule 14 (line)


state 66

   15 line: return_line '\n' .

    $default  reduce using rule 15 (line)


state 67

   12 line: while_line '\n' .

    $default  reduce using rule 12 (line)


state 68

   13 line: for_line '\n' .

    $default  reduce using rule 13 (line)


state 69

   11 line: if_line '\n' .

    $default  reduce using rule 11 (line)


state 70

    6 line: declare '\n' .

    $default  reduce using rule 6 (line)


state 71

    7 line: assign '\n' .

    $default  reduce using rule 7 (line)


state 72

   72 assign: id ASSIGNOP . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 101
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 73

   77 exp_unary: id INC .

    $default  reduce using rule 77 (exp_unary)


state 74

   78 exp_unary: id DEC .

    $default  reduce using rule 78 (exp_unary)


state 75

   73 assign: array ASSIGNOP . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 102
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 76

   31 function_fire: ID LP RP .

    $default  reduce using rule 31 (function_fire)


state 77

   32 function_fire: ID LP value_list . RP

    RP  shift, and go to state 103


state 78

   33 value_list: exp .
   34           | exp . ',' value_list
   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84
    ','    shift, and go to state 104

    $default  reduce using rule 33 (value_list)


state 79

   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp
   83 array: ID MLP exp . MRP
   84      | ID MLP exp . MRP MLP exp MRP
   85      | ID MLP exp . MRP MLP exp MRP MLP exp MRP

    MRP    shift, and go to state 105
    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84


state 80

   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp
   71    | LP exp . RP

    RP     shift, and go to state 106
    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84


state 81

   67 exp: exp PLUS . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 107
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 82

   69 exp: exp MINUS . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 108
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 83

   68 exp: exp STAR . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 109
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 84

   70 exp: exp DIV . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 110
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 85

   18 function: INT ID LP . RP
   22         | INT ID LP . function_param RP

    RP     shift, and go to state 111
    INT    shift, and go to state 112
    FLOAT  shift, and go to state 113
    CHAR   shift, and go to state 114

    function_param  go to state 115


state 86

   80 id_array: ID MLP . INTEGER MRP
   81         | ID MLP . INTEGER MRP MLP INTEGER MRP
   82         | ID MLP . INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP

    INTEGER  shift, and go to state 116


state 87

   58 sub_declare: id ',' . sub_declare

    ID  shift, and go to state 117

    sub_declare  go to state 118
    id           go to state 49
    id_array     go to state 50


state 88

   60 sub_declare: id_array ',' . sub_declare

    ID  shift, and go to state 117

    sub_declare  go to state 119
    id           go to state 49
    id_array     go to state 50


state 89

   20 function: FLOAT ID LP . RP
   24         | FLOAT ID LP . function_param RP

    RP     shift, and go to state 120
    INT    shift, and go to state 112
    FLOAT  shift, and go to state 113
    CHAR   shift, and go to state 114

    function_param  go to state 121


state 90

   19 function: CHAR ID LP . RP
   23         | CHAR ID LP . function_param RP

    RP     shift, and go to state 122
    INT    shift, and go to state 112
    FLOAT  shift, and go to state 113
    CHAR   shift, and go to state 114

    function_param  go to state 123


state 91

   47 condition_list: NOT . condition

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    condition      go to state 124
    exp            go to state 94
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 92

   45 if_line: IF LP condition_list . RP
   48 condition_list: condition_list . AND condition_list
   49               | condition_list . OR condition_list

    RP   shift, and go to state 125
    AND  shift, and go to state 126
    OR   shift, and go to state 127


state 93

   46 condition_list: condition .

    $default  reduce using rule 46 (condition_list)


state 94

   50 condition: exp . EQUAL exp
   51          | exp . GREATER exp
   52          | exp . LESS exp
   53          | exp . GREATER_EQUAL exp
   54          | exp . LESS_EQUAL exp
   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp

    PLUS           shift, and go to state 81
    MINUS          shift, and go to state 82
    STAR           shift, and go to state 83
    DIV            shift, and go to state 84
    GREATER        shift, and go to state 128
    LESS           shift, and go to state 129
    EQUAL          shift, and go to state 130
    GREATER_EQUAL  shift, and go to state 131
    LESS_EQUAL     shift, and go to state 132


state 95

   40 while_line: WHILE LP condition_list . RP
   48 condition_list: condition_list . AND condition_list
   49               | condition_list . OR condition_list

    RP   shift, and go to state 133
    AND  shift, and go to state 126
    OR   shift, and go to state 127


state 96

   79 id: ID .
   83 array: ID . MLP exp MRP
   84      | ID . MLP exp MRP MLP exp MRP
   85      | ID . MLP exp MRP MLP exp MRP MLP exp MRP

    MLP  shift, and go to state 37

    $default  reduce using rule 79 (id)


state 97

   42 for_line: FOR LP ';' . condition_list ';' exp_unary RP
   44         | FOR LP ';' . condition_list ';' RP

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 91

    function_fire   go to state 42
    condition_list  go to state 134
    condition       go to state 93
    exp             go to state 94
    exp_unary       go to state 44
    id              go to state 45
    array           go to state 46


state 98

   41 for_line: FOR LP assign . ';' condition_list ';' exp_unary RP
   43         | FOR LP assign . ';' condition_list ';' RP

    ';'  shift, and go to state 135


state 99

   72 assign: id . ASSIGNOP exp

    ASSIGNOP  shift, and go to state 72


state 100

   17 function: VOID ID LP . RP
   21         | VOID ID LP . function_param RP

    RP     shift, and go to state 136
    INT    shift, and go to state 112
    FLOAT  shift, and go to state 113
    CHAR   shift, and go to state 114

    function_param  go to state 137


state 101

   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp
   72 assign: id ASSIGNOP exp .

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84

    $default  reduce using rule 72 (assign)


state 102

   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp
   73 assign: array ASSIGNOP exp .

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84

    $default  reduce using rule 73 (assign)


state 103

   32 function_fire: ID LP value_list RP .

    $default  reduce using rule 32 (function_fire)


state 104

   34 value_list: exp ',' . value_list

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    value_list     go to state 138
    exp            go to state 78
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 105

   83 array: ID MLP exp MRP .
   84      | ID MLP exp MRP . MLP exp MRP
   85      | ID MLP exp MRP . MLP exp MRP MLP exp MRP

    MLP  shift, and go to state 139

    $default  reduce using rule 83 (array)


state 106

   71 exp: LP exp RP .

    $default  reduce using rule 71 (exp)


state 107

   67 exp: exp . PLUS exp
   67    | exp PLUS exp .
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp

    STAR  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 67 (exp)


state 108

   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   69    | exp MINUS exp .
   70    | exp . DIV exp

    STAR  shift, and go to state 83
    DIV   shift, and go to state 84

    $default  reduce using rule 69 (exp)


state 109

   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   68    | exp STAR exp .
   69    | exp . MINUS exp
   70    | exp . DIV exp

    $default  reduce using rule 68 (exp)


state 110

   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp
   70    | exp DIV exp .

    $default  reduce using rule 70 (exp)


state 111

   18 function: INT ID LP RP .

    $default  reduce using rule 18 (function)


state 112

   25 function_param: INT . ID
   28               | INT . ID ',' function_param

    ID  shift, and go to state 140


state 113

   27 function_param: FLOAT . ID
   30               | FLOAT . ID ',' function_param

    ID  shift, and go to state 141


state 114

   26 function_param: CHAR . ID
   29               | CHAR . ID ',' function_param

    ID  shift, and go to state 142


state 115

   22 function: INT ID LP function_param . RP

    RP  shift, and go to state 143


state 116

   80 id_array: ID MLP INTEGER . MRP
   81         | ID MLP INTEGER . MRP MLP INTEGER MRP
   82         | ID MLP INTEGER . MRP MLP INTEGER MRP MLP INTEGER MRP

    MRP  shift, and go to state 144


state 117

   79 id: ID .
   80 id_array: ID . MLP INTEGER MRP
   81         | ID . MLP INTEGER MRP MLP INTEGER MRP
   82         | ID . MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP

    MLP  shift, and go to state 86

    $default  reduce using rule 79 (id)


state 118

   58 sub_declare: id ',' sub_declare .

    $default  reduce using rule 58 (sub_declare)


state 119

   60 sub_declare: id_array ',' sub_declare .

    $default  reduce using rule 60 (sub_declare)


state 120

   20 function: FLOAT ID LP RP .

    $default  reduce using rule 20 (function)


state 121

   24 function: FLOAT ID LP function_param . RP

    RP  shift, and go to state 145


state 122

   19 function: CHAR ID LP RP .

    $default  reduce using rule 19 (function)


state 123

   23 function: CHAR ID LP function_param . RP

    RP  shift, and go to state 146


state 124

   47 condition_list: NOT condition .

    $default  reduce using rule 47 (condition_list)


state 125

   45 if_line: IF LP condition_list RP .

    $default  reduce using rule 45 (if_line)


state 126

   48 condition_list: condition_list AND . condition_list

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 91

    function_fire   go to state 42
    condition_list  go to state 147
    condition       go to state 93
    exp             go to state 94
    exp_unary       go to state 44
    id              go to state 45
    array           go to state 46


state 127

   49 condition_list: condition_list OR . condition_list

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 91

    function_fire   go to state 42
    condition_list  go to state 148
    condition       go to state 93
    exp             go to state 94
    exp_unary       go to state 44
    id              go to state 45
    array           go to state 46


state 128

   51 condition: exp GREATER . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 149
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 129

   52 condition: exp LESS . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 150
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 130

   50 condition: exp EQUAL . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 151
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 131

   53 condition: exp GREATER_EQUAL . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 152
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 132

   54 condition: exp LESS_EQUAL . exp

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 153
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 133

   40 while_line: WHILE LP condition_list RP .

    $default  reduce using rule 40 (while_line)


state 134

   42 for_line: FOR LP ';' condition_list . ';' exp_unary RP
   44         | FOR LP ';' condition_list . ';' RP
   48 condition_list: condition_list . AND condition_list
   49               | condition_list . OR condition_list

    AND  shift, and go to state 126
    OR   shift, and go to state 127
    ';'  shift, and go to state 154


state 135

   41 for_line: FOR LP assign ';' . condition_list ';' exp_unary RP
   43         | FOR LP assign ';' . condition_list ';' RP

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19
    NOT      shift, and go to state 91

    function_fire   go to state 42
    condition_list  go to state 155
    condition       go to state 93
    exp             go to state 94
    exp_unary       go to state 44
    id              go to state 45
    array           go to state 46


state 136

   17 function: VOID ID LP RP .

    $default  reduce using rule 17 (function)


state 137

   21 function: VOID ID LP function_param . RP

    RP  shift, and go to state 156


state 138

   34 value_list: exp ',' value_list .

    $default  reduce using rule 34 (value_list)


state 139

   84 array: ID MLP exp MRP MLP . exp MRP
   85      | ID MLP exp MRP MLP . exp MRP MLP exp MRP

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 157
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 140

   25 function_param: INT ID .
   28               | INT ID . ',' function_param

    ','  shift, and go to state 158

    $default  reduce using rule 25 (function_param)


state 141

   27 function_param: FLOAT ID .
   30               | FLOAT ID . ',' function_param

    ','  shift, and go to state 159

    $default  reduce using rule 27 (function_param)


state 142

   26 function_param: CHAR ID .
   29               | CHAR ID . ',' function_param

    ','  shift, and go to state 160

    $default  reduce using rule 26 (function_param)


state 143

   22 function: INT ID LP function_param RP .

    $default  reduce using rule 22 (function)


state 144

   80 id_array: ID MLP INTEGER MRP .
   81         | ID MLP INTEGER MRP . MLP INTEGER MRP
   82         | ID MLP INTEGER MRP . MLP INTEGER MRP MLP INTEGER MRP

    MLP  shift, and go to state 161

    $default  reduce using rule 80 (id_array)


state 145

   24 function: FLOAT ID LP function_param RP .

    $default  reduce using rule 24 (function)


state 146

   23 function: CHAR ID LP function_param RP .

    $default  reduce using rule 23 (function)


state 147

   48 condition_list: condition_list . AND condition_list
   48               | condition_list AND condition_list .
   49               | condition_list . OR condition_list

    AND  shift, and go to state 126
    OR   shift, and go to state 127

    AND       [reduce using rule 48 (condition_list)]
    OR        [reduce using rule 48 (condition_list)]
    $default  reduce using rule 48 (condition_list)


state 148

   48 condition_list: condition_list . AND condition_list
   49               | condition_list . OR condition_list
   49               | condition_list OR condition_list .

    AND  shift, and go to state 126
    OR   shift, and go to state 127

    AND       [reduce using rule 49 (condition_list)]
    OR        [reduce using rule 49 (condition_list)]
    $default  reduce using rule 49 (condition_list)


state 149

   51 condition: exp GREATER exp .
   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84

    $default  reduce using rule 51 (condition)


state 150

   52 condition: exp LESS exp .
   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84

    $default  reduce using rule 52 (condition)


state 151

   50 condition: exp EQUAL exp .
   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84

    $default  reduce using rule 50 (condition)


state 152

   53 condition: exp GREATER_EQUAL exp .
   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84

    $default  reduce using rule 53 (condition)


state 153

   54 condition: exp LESS_EQUAL exp .
   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84

    $default  reduce using rule 54 (condition)


state 154

   42 for_line: FOR LP ';' condition_list ';' . exp_unary RP
   44         | FOR LP ';' condition_list ';' . RP

    ID     shift, and go to state 59
    RP     shift, and go to state 162
    MINUS  shift, and go to state 7
    INC    shift, and go to state 18
    DEC    shift, and go to state 19

    exp_unary  go to state 163
    id         go to state 164


state 155

   41 for_line: FOR LP assign ';' condition_list . ';' exp_unary RP
   43         | FOR LP assign ';' condition_list . ';' RP
   48 condition_list: condition_list . AND condition_list
   49               | condition_list . OR condition_list

    AND  shift, and go to state 126
    OR   shift, and go to state 127
    ';'  shift, and go to state 165


state 156

   21 function: VOID ID LP function_param RP .

    $default  reduce using rule 21 (function)


state 157

   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp
   84 array: ID MLP exp MRP MLP exp . MRP
   85      | ID MLP exp MRP MLP exp . MRP MLP exp MRP

    MRP    shift, and go to state 166
    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84


state 158

   28 function_param: INT ID ',' . function_param

    INT    shift, and go to state 112
    FLOAT  shift, and go to state 113
    CHAR   shift, and go to state 114

    function_param  go to state 167


state 159

   30 function_param: FLOAT ID ',' . function_param

    INT    shift, and go to state 112
    FLOAT  shift, and go to state 113
    CHAR   shift, and go to state 114

    function_param  go to state 168


state 160

   29 function_param: CHAR ID ',' . function_param

    INT    shift, and go to state 112
    FLOAT  shift, and go to state 113
    CHAR   shift, and go to state 114

    function_param  go to state 169


state 161

   81 id_array: ID MLP INTEGER MRP MLP . INTEGER MRP
   82         | ID MLP INTEGER MRP MLP . INTEGER MRP MLP INTEGER MRP

    INTEGER  shift, and go to state 170


state 162

   44 for_line: FOR LP ';' condition_list ';' RP .

    $default  reduce using rule 44 (for_line)


state 163

   42 for_line: FOR LP ';' condition_list ';' exp_unary . RP

    RP  shift, and go to state 171


state 164

   77 exp_unary: id . INC
   78          | id . DEC

    INC  shift, and go to state 73
    DEC  shift, and go to state 74


state 165

   41 for_line: FOR LP assign ';' condition_list ';' . exp_unary RP
   43         | FOR LP assign ';' condition_list ';' . RP

    ID     shift, and go to state 59
    RP     shift, and go to state 172
    MINUS  shift, and go to state 7
    INC    shift, and go to state 18
    DEC    shift, and go to state 19

    exp_unary  go to state 173
    id         go to state 164


state 166

   84 array: ID MLP exp MRP MLP exp MRP .
   85      | ID MLP exp MRP MLP exp MRP . MLP exp MRP

    MLP  shift, and go to state 174

    $default  reduce using rule 84 (array)


state 167

   28 function_param: INT ID ',' function_param .

    $default  reduce using rule 28 (function_param)


state 168

   30 function_param: FLOAT ID ',' function_param .

    $default  reduce using rule 30 (function_param)


state 169

   29 function_param: CHAR ID ',' function_param .

    $default  reduce using rule 29 (function_param)


state 170

   81 id_array: ID MLP INTEGER MRP MLP INTEGER . MRP
   82         | ID MLP INTEGER MRP MLP INTEGER . MRP MLP INTEGER MRP

    MRP  shift, and go to state 175


state 171

   42 for_line: FOR LP ';' condition_list ';' exp_unary RP .

    $default  reduce using rule 42 (for_line)


state 172

   43 for_line: FOR LP assign ';' condition_list ';' RP .

    $default  reduce using rule 43 (for_line)


state 173

   41 for_line: FOR LP assign ';' condition_list ';' exp_unary . RP

    RP  shift, and go to state 176


state 174

   85 array: ID MLP exp MRP MLP exp MRP MLP . exp MRP

    INTEGER  shift, and go to state 40
    ID       shift, and go to state 4
    LP       shift, and go to state 41
    MINUS    shift, and go to state 7
    INC      shift, and go to state 18
    DEC      shift, and go to state 19

    function_fire  go to state 42
    exp            go to state 177
    exp_unary      go to state 44
    id             go to state 45
    array          go to state 46


state 175

   81 id_array: ID MLP INTEGER MRP MLP INTEGER MRP .
   82         | ID MLP INTEGER MRP MLP INTEGER MRP . MLP INTEGER MRP

    MLP  shift, and go to state 178

    $default  reduce using rule 81 (id_array)


state 176

   41 for_line: FOR LP assign ';' condition_list ';' exp_unary RP .

    $default  reduce using rule 41 (for_line)


state 177

   67 exp: exp . PLUS exp
   68    | exp . STAR exp
   69    | exp . MINUS exp
   70    | exp . DIV exp
   85 array: ID MLP exp MRP MLP exp MRP MLP exp . MRP

    MRP    shift, and go to state 179
    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    STAR   shift, and go to state 83
    DIV    shift, and go to state 84


state 178

   82 id_array: ID MLP INTEGER MRP MLP INTEGER MRP MLP . INTEGER MRP

    INTEGER  shift, and go to state 180


state 179

   85 array: ID MLP exp MRP MLP exp MRP MLP exp MRP .

    $default  reduce using rule 85 (array)


state 180

   82 id_array: ID MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER . MRP

    MRP  shift, and go to state 181


state 181

   82 id_array: ID MLP INTEGER MRP MLP INTEGER MRP MLP INTEGER MRP .

    $default  reduce using rule 82 (id_array)
